version: '3.8'

services:
  app:
    container_name: web_back
    image: edilsonmaria/api:1.0
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    depends_on:
      - db
    networks:
      - web_networks

  web:
    container_name: web_front
    image: edilsonmaria/web:1.0
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - db
    networks:
      - web_networks

  db:
    container_name: web_DB
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web_networks

volumes:
  db_data:

networks:
  web_networks:
